{"version":3,"sources":["api/api.js","components/Loader/Loader.jsx","components/Post/Post.jsx","components/PostsList/PostsList.jsx","components/Comments/Comments.jsx","components/NewCommentForm/NewCommentForm.jsx","components/Details/Details.jsx","components/PostDetails/PostDetails.jsx","components/UserSelect/UserSelect.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","a","fetch","response","json","result","data","getDateilPosts","postId","getComments","remove","url","options","then","request","method","addComment","name","email","body","headers","JSON","stringify","Loader","className","Post","title","userId","selectedUserId","id","selectedPost","resetUser","hidden","type","onClick","PostsList","selectedUser","useState","users","setUsers","isPrepered","setIsPrepered","useEffect","filter","post","postUser","map","user","key","Comments","comment","editComment","handleDeleteComment","NewCommentForm","userName","setName","setEmail","setBody","handleChange","event","target","value","onSubmit","preventDefault","placeholder","onChange","Details","details","setComment","isDisable","setIsDiseble","useCallback","length","item","PostDetails","isLoading","setIsLoading","setDetails","Promise","all","detailsData","commentData","UserSelect","onSelectUser","App","setSelectedUser","setSelectedPost","selectUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a68454f.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getUserPosts = async() => {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const result = await response.json();\n  const { data } = result;\n\n  return data;\n};\n\nexport const getDateilPosts = async(postId) => {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const result = await response.json();\n  const { data } = result;\n\n  return data;\n};\n\nexport const getComments = async(postId) => {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n  const result = await response.json();\n  const { data } = result;\n\n  return data;\n};\n\nconst request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(response => response.json())\n  .then(result => result.data);\n\nconst remove = (url) => {\n  request(url, { method: 'DELETE' });\n};\n\nexport const removeComment = id => remove(`/comments/${id}`);\nexport const addComment = (name, email, body, postId) => fetch(\n  `${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      body,\n      postId,\n    }),\n  },\n);\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Post({\n  title,\n  userId,\n  selectedUserId,\n  id,\n  selectedPost,\n  resetUser,\n}) {\n  return (\n    <li>\n      <div>\n        <b>{`User #${userId}:`}</b>\n        {title}\n      </div>\n      <button\n        hidden={id === selectedPost}\n        type=\"button\"\n        className=\"PostsList__button button hidden\"\n        onClick={() => selectedUserId(id)}\n      >\n        Open\n      </button>\n      <button\n        type=\"button\"\n        className=\"PostsList__button button\"\n        hidden={id !== selectedPost}\n        onClick={resetUser}\n      >\n        Close\n      </button>\n    </li>\n  );\n}\n\nPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number.isRequired,\n  selectedUserId: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  selectedPost: PropTypes.number.isRequired,\n  resetUser: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/api';\nimport './PostsList.scss';\nimport { Loader } from '../Loader/Loader';\nimport { Post } from '../Post/Post';\n\nexport const PostsList = ({\n  selectedUser,\n  selectedUserId,\n  selectedPost,\n  resetUser,\n}) => {\n  const [users, setUsers] = useState([]);\n  const [isPrepered, setIsPrepered] = useState(false);\n\n  useEffect(() => {\n    setIsPrepered(true);\n\n    const postUser = async() => {\n      const data = await getUserPosts();\n\n      if (selectedUser) {\n        setUsers(data.filter(post => selectedUser === post.id));\n\n        setIsPrepered(false);\n\n        return;\n      }\n\n      setUsers(data);\n      setIsPrepered(false);\n    };\n\n    postUser();\n  });\n\n  return !isPrepered\n    ? (<Loader />)\n    : (\n      <div className=\"PostsList\">\n        <h2>Posts:</h2>\n\n        <ul className=\"PostsList__list\">\n          {users.map(user => (\n            <Post\n              key={user.id}\n              id={user.id}\n              title={user.title}\n              userId={user.userId}\n              selectedUserId={selectedUserId}\n              selectedPost={selectedPost}\n              resetUser={resetUser}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n};\n\nPostsList.propTypes = {\n  selectedUser: PropTypes.number.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  selectedPost: PropTypes.number.isRequired,\n  resetUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { removeComment, getComments } from '../../api/api';\n\nexport function Comments({ comment, selectedPost, editComment }) {\n  const handleDeleteComment = async() => {\n    await removeComment(comment.id);\n    await getComments(selectedPost)\n      .then(editComment);\n  };\n\n  return (\n    <>\n      <li className=\"PostDetails__list-item\">\n        <button\n          type=\"button\"\n          className=\"PostDetails__remove-button button\"\n          onClick={handleDeleteComment}\n        >\n          X\n        </button>\n        <p>{comment.body}</p>\n      </li>\n    </>\n  );\n}\n\nComments.propTypes = {\n  comment: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n  }).isRequired,\n  editComment: PropTypes.func.isRequired,\n  selectedPost: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addComment, getComments } from '../../api/api';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectedPost, editComment }) => {\n  const [userName, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      default:\n        setBody(value);\n    }\n  };\n\n  const clearForm = () => {\n    setBody('');\n    setEmail('');\n    setName('');\n  };\n\n  const onSubmit = async(event) => {\n    event.preventDefault();\n\n    await addComment(userName, email, body, selectedPost);\n    await getComments(selectedPost)\n      .then(editComment);\n\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={userName}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={handleChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n  editComment: PropTypes.func.isRequired,\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Comments } from '../Comments/Comments';\nimport { NewCommentForm } from '../NewCommentForm';\n\nexport const Details = ({\n  selectedPost,\n  details,\n  comment,\n  setComment,\n}) => {\n  const [isDisable, setIsDiseble] = useState(true);\n  const onDisable = () => setIsDiseble(!isDisable);\n  const editComment = useCallback(setComment, []);\n\n  return (\n    <>\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{details.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={onDisable}\n        >\n          {`Hide ${comment && comment.length} comments`}\n        </button>\n\n        <ul\n          className=\"PostDetails__list\"\n          hidden={isDisable}\n        >\n          {comment && comment.map(item => (\n            <Comments\n              key={item.id}\n              comment={item}\n              selectedPost={selectedPost}\n              editComment={editComment}\n            />\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPost={selectedPost}\n            editComment={editComment}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nDetails.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n  details: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    body: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n  }).isRequired,\n  setComment: PropTypes.func.isRequired,\n  comment: PropTypes.arrayOf([]).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateilPosts, getComments } from '../../api/api';\nimport './PostDetails.scss';\nimport { Loader } from '../Loader/Loader';\nimport { Details } from '../Details/Details';\n\nexport const PostDetails = ({ selectedPost }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [details, setDetails] = useState(null);\n  const [comment, setComment] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    (async() => {\n      const [detailsData, commentData] = await Promise.all([\n        getDateilPosts(selectedPost),\n        getComments(selectedPost),\n      ]);\n\n      setDetails(detailsData);\n      setComment(commentData);\n      setIsLoading(false);\n    })();\n  }, [selectedPost]);\n\n  return (\n    <div className=\"PostDetails\">\n      {(isLoading && selectedPost) && <Loader />}\n      {details && (\n        <Details\n          selectedPost={selectedPost}\n          details={details}\n          comment={comment}\n          setComment={setComment}\n        />\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPost: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function UserSelect({ selectedUser, onSelectUser }) {\n  return (\n    <label>\n      Select a user: &nbsp;\n\n      <select\n        className=\"App__user-selector\"\n        value={selectedUser}\n        onChange={onSelectUser}\n      >\n        <option value=\"0\">All users</option>\n        <option value=\"1\">Leanne Graham</option>\n        <option value=\"2\">Ervin Howell</option>\n        <option value=\"3\">Clementine Bauch</option>\n        <option value=\"4\">Patricia Lebsack</option>\n        <option value=\"5\">Chelsey Dietrich</option>\n        <option value=\"6\">Mrs. Dennis Schulist</option>\n        <option value=\"7\">Kurtis Weissnat</option>\n        <option value=\"8\">Nicholas Runolfsdottir V</option>\n        <option value=\"9\">Glenna Reichert</option>\n        <option value=\"10\">Leanne Graham</option>\n      </select>\n    </label>\n  );\n};\n\nUserSelect.propTypes = {\n  selectedUser: PropTypes.number.isRequired,\n  onSelectUser: PropTypes.func.isRequired,\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelect } from './components/UserSelect/UserSelect';\n\nconst App = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPost, setSelectedPost] = useState(0);\n\n  const selectUser = useCallback((event) => {\n    setSelectedUser(+event.target.value);\n  }, []);\n\n  const selectedUserId = (id) => {\n    setSelectedPost(id);\n  };\n\n  const resetUser = () => {\n    setSelectedPost(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <UserSelect\n          selectedUser={selectedUser}\n          onSelectUser={selectUser}\n        />\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUser={selectedUser}\n            selectedUserId={selectedUserId}\n            selectedPost={selectedPost}\n            resetUser={resetUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPost={selectedPost}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}